% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_data.R
\name{get_betas_x}
\alias{get_betas_x}
\title{Obtain list of beta matrices for generating multivariate categorical exposure X}
\usage{
get_betas_x(profiles, R, modal_theta_prob = 0.85, formula_x, V_unique)
}
\arguments{
\item{profiles}{Matrix where each column is a latent class pattern profile
and each row is the item level for all classes. JxK, where J is the number of
exposure items and K is the number of latent classes. The item levels must
range from 1 to R, where R is the number of levels for all items.}

\item{R}{Number of exposure levels. Fixed across exposure items.}

\item{modal_theta_prob}{Probability of true exposure level. Default is 0.85.}

\item{formula_x}{String specifying formula for multinomial logistic
regression to create multivariate categorical exposure X.}

\item{V_unique}{Dataframe with one column containing the unique values of
the categorical covariate specified in \code{formula_x}.}
}
\value{
Returns list \code{beta_list_x} of length J with each element a matrix of betas to
be used in a multinomial logistic regression to generate a categorical
exposure variable for that item. Each matrix of betas has R rows and number
of columns equal to the number of columns in the design matrix.
}
\description{
Obtain list of beta matrices that can be used to generate the multivariate
categorical exposure variable X using a multinomial logistic regression where
X depends on categorical covariate composed of latent class assignment C.
}
\examples{
## Example 1: X ~ C
# Number of items, exposure levels, latent classes
J <- 30; R <- 4; K <- 3
# Formula specifying that X depends on C
formula_x <- "~ c_all"
# Dataframe with unique values of C
V_unique <- data.frame(c_all = as.factor(1:K))
# Matrix of pattern profiles for each latent class
profiles <- as.matrix(data.frame(C1 = c(rep(1, times = 0.5 * J), 
                                        rep(3, times = 0.5 * J)),
                                 C2 = c(rep(4, times = 0.2 * J), 
                                        rep(2, times = 0.8 * J)),
                                 C3 = c(rep(3, times = 0.3 * J), 
                                        rep(4, times = 0.4 * J),
                                        rep(1, times = 0.3 * J))))
# True level probability
modal_theta_prob <- 0.85
# Get matrix of betas for generating C
beta_list_x <- get_betas_x(profiles = profiles, R = R, 
                           modal_theta_prob = modal_theta_prob, 
                           formula_x = formula_x, V_unique = V_unique)
# Beta matrix for item j=1
beta_list_x[[1]]     
                      
## Example 2: X ~ C + S
# Update formula_x
formula_x <- "~ c_all + s_all"
# Update beta_list_x by adding in coefficients for S to each j matrix
beta_list_x <- lapply(1:J, function(j) cbind(beta_list_x[[j]], 
                                             s_all = c(0, 0.5, 0, 0)))
beta_list_x[[1]]  
                     
}
\seealso{
\code{\link[=simulate_pop]{simulate_pop()}}
}
