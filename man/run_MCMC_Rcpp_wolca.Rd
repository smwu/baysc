% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_MCMC_Rcpp_wolca.R
\name{run_MCMC_Rcpp_wolca}
\alias{run_MCMC_Rcpp_wolca}
\title{Run MCMC to get posterior samples for WOLCA}
\usage{
run_MCMC_Rcpp_wolca(
  OLCA_params,
  n_runs,
  burn,
  thin,
  K,
  p,
  d,
  n,
  w_all,
  x_mat,
  alpha,
  eta
)
}
\arguments{
\item{OLCA_params}{Output list from `init_OLCA()` containing `pi`, `c_all`, 
and `theta`}

\item{n_runs}{Number of MCMC iterations}

\item{burn}{Burn-in period}

\item{thin}{Thinning factor}

\item{K}{Number of classes}

\item{p}{Number of exposure items}

\item{d}{Number of exposure categories}

\item{n}{Number of individuals}

\item{w_all}{Weights normalized to sum to n. nx1}

\item{x_mat}{Categorical exposure matrix. nxp}

\item{alpha}{Vector of hyperparameters for pi. Kx1}

\item{eta}{Vector of hyperparameters for theta. dx1}
}
\value{
Returns list `MCMC_out` containing:
\describe{
  \item{\code{pi_MCMC}}{Matrix of posterior samples for pi. (n_iter)xK}
  \item{\code{theta_MCMC}}{Array of posterior samples for theta. (n_iter)xpxKxd}
  \item{\code{c_all_MCMC}}{Matrix of posterior samples for c_all. (n_iter)xn}
}
}
\description{
`run_MCMC_Rcpp_wolca` runs the Gibbs sampler MCMC algorithm using Rcpp to 
obtain posterior samples for the two-step unsupervised WOLCA model
}
\examples{
# Load data and obtain relevant variables
data("sim_data")
data_vars <- sim_data
x_mat <- data_vars$X_data            # Categorical exposure matrix, nxp
cluster_id <- data_vars$cluster_id   # Cluster indicators, nx1
sampling_wt <- data_vars$sample_wt

# Obtain dimensions
n <- dim(x_mat)[1]        # Number of individuals
p <- dim(x_mat)[2]        # Number of exposure items
d <- max(apply(x_mat, 2,  # Number of exposure categories
function(x) length(unique(x))))  
# Obtain normalized weights
kappa <- sum(sampling_wt) / n   # Weights norm. constant
w_all <- c(sampling_wt / kappa) # Weights normalized to sum to n, nx1

# Set hyperparameters
K <- 30
alpha <- rep(1, K) / K
eta <- rep(1, d)

# First initialize OLCA params
OLCA_params <- init_OLCA(K = K, n = n, p = p, d = d, alpha = alpha, eta = eta)

# Then run MCMC sampling
MCMC_out <- run_MCMC_Rcpp_wolca(OLCA_params = OLCA_params, n_runs = 50, 
burn = 25, thin = 5, K = K, p = p, d = d, n = n, w_all = w_all, x_mat = x_mat, 
alpha = alpha, eta = eta)
# MCMC_out

}
\seealso{
[run_MCMC_Rcpp()]
}
