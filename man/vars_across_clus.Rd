% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_functions.R
\name{vars_across_clus}
\alias{vars_across_clus}
\title{Create table of cluster distributions across variables}
\usage{
vars_across_clus(
  c_all,
  cov_df,
  sampling_wt,
  stratum_id,
  cluster_id,
  digits = 1,
  col_props = TRUE,
  res
)
}
\arguments{
\item{c_all}{nx1 factor vector of latent class assignments, typically obtained
from the \code{swolca()}, \code{wolca()}, \code{swolca_var_adjust()} or \code{wolca_var_adjust()}
functions. Factor levels should be labeled with the names that are to appear
in the output table.}

\item{cov_df}{Dataframe containing sociodemographic variables. n rows.
Factors should be labeled with the names and levels that are to appear in the
output table.}

\item{sampling_wt}{Vector of survey sampling weights. nx1. Default is \code{NULL},
indicating no sampling weights and setting all weights to 1.}

\item{stratum_id}{Vector of individual stratum IDs. nx1. Default is \code{NULL},
indicating no stratification.}

\item{cluster_id}{Vector of individual cluster IDs. nx1. Default is \code{NULL},
indicating each individual is their own cluster.}

\item{digits}{Integer indicating the number of decimal places to be used.
Default is 1, which rounds to the nearest tenth.}

\item{col_props}{Boolean indicating if factor variables should have percentages
reported as column totals (default \code{TRUE}) that provide the percentage of the
population in each category for a given latent class, or reported as row
totals that provide the percentage of the population in each latent class for
a given category.}

\item{res}{Results from \code{swolca()}, \code{wolca()}, \code{swolca_var_adjust()} or
\code{wolca_var_adjust()}.}
}
\value{
Outputs dataframe \code{output_df} displaying the distribution of variables across
the latent classes in the population. \code{output_df} has columns for the
variable names, the category names for factor variables, the distribution of
the variables across the latent classes, and the distribution of the
variables overall in the population.
}
\description{
\code{vars_across_clus} displays the distribution of variables across clusters
(i.e., latent classes) in the population.
}
\details{
The dataframe output includes a first row that presents the population
percentage of individuals falling into each latent class, as well as the
corresponding posterior standard deviation, obtained through the SWOLCA or
WOLCA mode \eqn{\pi} parameters. The second row is the sample percentage
falling into each latent class. Subsequent rows for continuous variables
display the mean values for each latent class in the population, adjusting
for survey design. Subsequent rows for factor variables display either column
totals (percentage of the population in each category for a given latent
class) or row totals (percentage of the population in each latent class for a
given category), depending on \code{col_props}, adjusting for survey design.
Survey design adjustments are carried out post-hoc using methods provided in
the \code{survey} package. Since these methods do not account for variability in
the latent classes, their standard error estimates will be underestimates and
are not reported.
}
\examples{
data("data_nhanes")
data("run_nhanes_swolca_results")
res <- run_nhanes_swolca_results
c_all <- factor(res$estimates_adjust$c_all, levels = 1:5, 
                labels = paste0("C", 1:5))
cov_df <- dplyr::select(data_nhanes, RIDAGEYR, age_cat, racethnic, smoker, 
                        physactive)
cov_df <- dplyr::rename(cov_df, Age = RIDAGEYR)
cov_df <- dplyr::mutate(cov_df, 
   Age_Group = factor(age_cat, levels = c(1, 2, 3), 
                      labels = c("[20, 40)", "[40, 60)", ">=60")),
   Race_Ethnicity = factor(racethnic, c(1, 2, 3, 4, 5),
                      labels = c("NH White", "NH Black", "NH Asian", 
                                 "Hispanic/Latino", "Other/Mixed")),
   Current_Smoker = factor(smoker, levels = c(0, 1), labels = c("No", "Yes")),
   Physical_Activity = factor(physactive, levels = c("Inactive", "Active")),
   .keep = "unused")
output_df <- vars_across_clus(c_all = c_all, cov_df = cov_df, 
                              sampling_wt = data_nhanes$sample_wt, 
                              stratum_id = data_nhanes$stratum_id,
                              cluster_id = data_nhanes$cluster_id,
                              digits = 1, col_props = TRUE, res = res)
                 
}
